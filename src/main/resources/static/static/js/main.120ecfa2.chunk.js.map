{"version":3,"sources":["config/endpoints.js","CreateUpdateEmp.js","Employees.js","App.js","index.js"],"names":["API","CreateUpdateEmp","props","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","jobTitle","setJobTitle","location","useLocation","history","useHistory","pathEnd","pathname","split","creation","isNaN","header","useEffect","getEmployeeById","id","a","console","log","axios","get","response","Object","keys","data","map","property","handleChange","e","target","value","className","to","onSubmit","preventDefault","employeeObj","addNewEmployee","updateEmployee","push","htmlFor","onChange","Employees","employees","emp","key","onClick","deleteEmployee","App","loadingFunc","dotsInterval","state","loading","clearInterval","interval","setInterval","dots","length","setState","getEmployees","delete","employee","put","post","this","loadStyle","display","style","path","render","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.120ecfa2.chunk.js","sourcesContent":["export const API = 'http://localhost:8080/api/employees' //'https://damp-shore-59223.herokuapp.com/api/employees'","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { API } from './config/endpoints';\nimport axios from 'axios';\n\nconst CreateUpdateEmp = (props) => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [jobTitle, setJobTitle] = useState('')\n    const location = useLocation()\n    const history = useHistory()\n\n    let pathEnd = location.pathname.split('/')[2]\n    let creation = isNaN(pathEnd) ? true : false\n\n    let header = creation ? 'Add a New Employee' : `Update Details for Employee #${pathEnd}`\n\n    useEffect(() => {\n        if (!creation) getEmployeeById(pathEnd)\n    }, [])\n\n    const getEmployeeById = async (id) => {\n        console.log(id)\n        try {\n            let response = await axios.get(`${API}/${id}`)\n\n            // This mapping is to turn any 'null' properties into empty strings (because React)\n            Object.keys(response.data).map(property => !response.data[property] ? response.data[property] = '' : response.data[property])\n\n            let { firstName, lastName, email, jobTitle } = response.data\n\n            setFirstName(firstName)\n            setLastName(lastName)\n            setEmail(email)\n            setJobTitle(jobTitle)\n            console.log(response.data)\n        } catch (err) {\n\n        }\n    }\n\n    const handleChange = e => {\n    \n        let { id, value } = e.target\n\n        switch (id) {\n            case 'first':\n                setFirstName(value)\n                break;\n            case 'last':\n                setLastName(value)\n                break;\n            case 'email':\n                setEmail(value)\n                break;\n            case 'title':\n                setJobTitle(value)\n                break;\n            default:\n                break;\n        }\n\n        console.log(id)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        let employeeObj = {\n            firstName,\n            lastName,\n            email,\n            jobTitle\n        }\n\n        creation ? props.addNewEmployee(employeeObj) : props.updateEmployee(employeeObj, pathEnd)\n        history.push('/')\n    }\n\n    return (\n        <>\n            <Link className='link' to='/'>Back</Link>\n            <h1>{header}</h1>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"first\">First Name</label>\n                <input id=\"first\" value={firstName} onChange={handleChange} />\n\n                <label htmlFor=\"last\">Last Name</label>\n                <input id=\"last\" value={lastName} onChange={handleChange}/>\n\n                <label htmlFor=\"email\">Email</label>\n                <input id=\"email\" value={email} onChange={handleChange}/>\n\n                <label htmlFor=\"title\">Title</label>\n                <input id=\"title\" value={jobTitle} onChange={handleChange}/>\n\n                <button>{creation ? 'ADD' : 'UPDATE'}</button>\n            </form>\n        </>\n    )\n}\n\nexport default CreateUpdateEmp;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Employees = (props) => {\n    const history = useHistory()\n\n    const updateEmployeeDetails = id => history.push(`/employees/${id}`)\n\n    let employees = props.employees.map(emp => {\n        return (\n            <ul key={emp.id}>\n                <li>\n                    <span>First Name: </span>\n                    {emp.firstName}\n                </li>\n                <li>\n                    <span>Last Name: </span>\n                    {emp.lastName}\n                </li>\n                <li>\n                    <span>Email: </span>\n                    {emp.email}\n                </li>\n                <li>\n                    <span>Job Title: </span>\n                    {emp.jobTitle}\n                </li>\n                <li className='l-button x-button' onClick={() => updateEmployeeDetails(emp.id)}>UPDATE</li>\n                <li className='r-button x-button' onClick={() => props.deleteEmployee(emp.id)}>DELETE</li>\n            </ul>\n        )\n    })\n\n    return (\n        <div>\n            <Link className='link' to='/employees'>ADD EMPLOYEE</Link><br/>\n            <h1>List of Employees</h1>\n            {employees}\n        </div>\n    )\n}\n\nexport default Employees;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport CreateUpdateEmp from './CreateUpdateEmp';\nimport Employees from './Employees';\nimport { API } from './config/endpoints';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      employees: [],\n      loading: false,\n      interval: false,\n      dots: ''\n    }\n  }\n\n  componentDidMount() { \n    // This app runs with the Employee2020 Java/Spring Boot server\n  \n    console.log('v1.09')\n    this.getEmployees() \n  }\n\n  loadingFunc = () => {\n\n    let dotsInterval = false\n\n    if (!this.state.loading) {\n      dotsInterval = setInterval(() => {\n        if (this.state.dots.length < 3) {\n          this.setState(state => {\n            return {\n              dots: state.dots + '.'\n            }\n          })\n        } \n        else this.setState({ dots: '' })\n      }, 100)\n    } else clearInterval(this.state.interval)\n\n    this.setState({ loading: !this.state.loading, interval: dotsInterval })\n\n  }\n\n  getEmployees = async () => {\n    this.loadingFunc()\n    try {\n      let response = await axios.get(API)\n      this.setState({ employees: response.data })\n      console.log(response.data)\n    }\n    catch (err) {\n      console.log('error occured')\n    }\n    finally {\n      this.loadingFunc()\n    }\n  }\n\n  deleteEmployee = async (id) => {\n    console.log('delete')\n    this.loadingFunc()\n    try {\n      let response = await axios.delete(`${API}/${id}`)\n      this.getEmployees()\n      console.log(response)\n    }\n    catch (err) {\n      console.log('error occured')\n      console.log(err)\n    }\n    finally {\n      this.loadingFunc()\n    }\n  }\n\n  updateEmployee = async (employee, id) => {\n    console.log('update')\n    this.loadingFunc()\n    try {\n      let response = await axios.put(`${API}/${id}`, employee)\n      console.log(response)\n      this.getEmployees()\n    } \n    catch (err) {\n      console.log('failed update')\n    }\n    finally {\n      this.loadingFunc()\n    }\n  }\n\n  addNewEmployee = async (employee) => {\n    console.log('create')\n    this.loadingFunc()\n    try {\n      let response = await axios.post(API, employee)\n      console.log(response)\n      this.getEmployees()\n    } \n    catch (err) {\n      console.log('failed create')\n    }\n    finally {\n      this.loadingFunc()\n    }\n  }\n\n  render() {\n\n    let { loading, dots } = this.state \n    let loadStyle = loading ? { display: 'block' } : { display: 'none' }\n\n    return (\n      <>\n        <div className=\"loading dissappear\" style={loadStyle}>loading{dots}</div>\n        <Router>\n          <Switch>\n            <Route path='/employees' render={() => <CreateUpdateEmp \n                                                      updateEmployee={this.updateEmployee}\n                                                      addNewEmployee={this.addNewEmployee}/>} />\n            <Route path='/' render={() => <Employees \n                                              employees={this.state.employees} \n                                              deleteEmployee={this.deleteEmployee}/>} />\n          </Switch>\n        </Router>\n      </>\n     );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}